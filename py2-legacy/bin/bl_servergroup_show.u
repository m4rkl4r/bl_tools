#!python
import blLib
from blBase import blBase
from optparse import OptionParser
import sys
from sys import argv
import re
import os

parser = OptionParser()
blBase.setUnsupported(parser)
parser.add_option("--servergroup", dest="serverGroup")

## this file is non-complient because of  findAllByParentGroup
## i doubt this is going anywhere but BMC wants to keep us on our toes
## these supported functions would get us everything but subdirectories in a depotgroup
#We might get somewhere with these two, which 
#GenericObject - getBlObjectsByCondition
#GenericObject - getBlObjectsByPropertyCondition
#
#depotobject listallbygroup shows non-directories
#
#Group listAllJobGroupMembers shows both files and directories in a job group
#
#Server - listServersInGroup
#Server - findServerObjectsByGroup - shows all servers in a group
#ServerGroup - listChildGroupsInGroup - shows subgroups
#

(option,args) = parser.parse_args()

sum=0
if not option.serverGroup:
    parser.print_help()
    print
    print "There can only be one group type."
    sys.exit(1)

#if (option.JobGroup and option.DepotGroup) or not (option.JobGroup or option.DepotGroup):
#    print "USAGE: bl_ls (--Job <job group> | --Depot <depot group>)"
#    sys.exit(1)
if not option.serverGroup is None:
    parent,child=blBase.normalizeArg(option.serverGroup,"--servergroup")
    if child == '': option.serverGroup=parent
    else: option.serverGroup=parent+"/"+child
    group=option.serverGroup
    print "serverGroup",option.serverGroup
    grouptype="Server"
    header = "Servers"

bl=blBase()
groupID=None
#result = bl.listGroup("Smart_Job",group+"/getsmart")
#print result
#result = bl.listGroupFolders("Job",group)
#bl.groupDBKey(group);
#print bl.runBlcli("File","getFileByteDataFromAgent",['fqdn here',"/etc/passwd","null"])
#print bl.runBlcli("File","getFileDataFromAgent",['fqdn here',"/etc/passwd","null"])
#sys.exit(0)
#result = bl.listGroupFiles("Depot",group)
#result = bl.listGroup("Depot",group)
result=bl.getGroupID(grouptype,group)
if result.success:
    groupid=result.returnValue
else:
    print grouptype+"Group",group,"not found."
    sys.exit(1)
result = bl.runBlcli(grouptype + "Group","findAllByParentGroup",[groupid])
if not result.success:
    print "Couldn't look up subgroups."
else:
    subgroups = result.returnValues[1:-1].split(", Id = ")
    print "subgroups:"
    print "\tID\t\tgroup\tdescription"
    for g in subgroups:
        #print "g--"+g+"--g"
        g=g.split(";")
        g=map(lambda x: x.split(" = ")[-1], g)
        if len(g)>1: g[1]="\""+g[1]+"\""
        if len(g)>2: g[2]="\""+g[2]+"\""
        print "\t" + "\t".join(g)
result = bl.listGroupFiles(grouptype,group)
if result.success:
    print header + ":"
    for item in result.returnValue.split("\n"):
        print "\t\"" + item + "\""

bl.finishup(result.success)
