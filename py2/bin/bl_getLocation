#!python
from blBase import blBase
import sys
import re
import os

from optparse import OptionParser

parser = OptionParser()
blBase.setUnsupported(parser)
parser.add_option("--depotObj", dest="depotObj",help="The object to modify  If not starting with '/', $myGroup will be prepended")

(option,args) = parser.parse_args()

(depotGroup,depotObj)=blBase.normalizeArg(option.depotObj,"--depotObj")


if not (option.depotObj):
    parser.print_help()
    print "--depotObj required"
    sys.exit(1)

bl=blBase()

## here maybe DepotFile addFileToDepot(groupname,filelocation,name,description) -- all fields are normal strings
print "finding", depotGroup + "/" + depotObj, "in depot:",
result = bl.depotObjectDBKey(depotGroup,depotObj)
if result is None:
    print "couldn't find", depotGroup + "/" + depotObj, "in depot.",
    bl.finishup(False)    
objectdbkey=None
if result.success:
    objectdbkey=result.returnValue
else:
    print "couldn't find",option.depotObj,"in",option.depotGroup 
    sys.exit(1)
print "finding properties of", depotGroup + "/" + depotObj, "in depot:",

#result = bl.runBlcli("DepotObject","getFullyResolvedPropertyValue",["NSHSCRIPT",depotGroup,depotObj,"LOCATION*"])
#print result
example_group="//blfs/bladelogic/depot/scripts"
example_group="/scripts"
example_file="9293728.1_demo.nsh"
result = bl.runBlcli("DepotFile","replaceFileContents",[example_group,example_file, "//fqdn.com/tmp/contents"])
print result

bl.finishup(result.success)
