#!/unixworks/virtualenvs/py382/bin/python
from blBase import blBase
import sys
import re
import os
from subprocess import check_output

from optparse import OptionParser

parser = OptionParser()
blBase.setUnsupported(parser)
parser.add_option("--servergroups", dest="serverGroup",help="Example: /WorkAreas/BL_GROUP/USER/1234567")
parser.add_option("--servers", dest="serverList",help="comma delimited list.  short name or long name - long name must be exact.")
parser.add_option("--serverfile", dest="serverFile",help="newline delimited file.  short name or long name - long name must be exact.")
parser.add_option("--force",dest="force",help="create group and add available servers even if some are not found")
(option,args) = parser.parse_args()

bl=blBase()
success=True

if option.serverList and option.serverFile:
    parser.print_help()
    print("only one of --serverlist and --serverfile can be used")
    bl.finishup(success)

serverlist=None
if option.serverList:
    serverlist=option.serverList.split(",")
if option.serverFile:
    f=open(option.serverFile,mode="rt")
    serverlist = f.readlines()
    serverlist = [x.strip() for x in serverlist]
    f.close()

servermap=None
if option.serverList or option.serverFile:
    servermap=bl.validateServerList(serverlist)

    if servermap["bad"]:
        print("These servers were not found in bladelogic:")
        for server in servermap["bad"]:
            print("\t" + str(server))
        if not option.force:
            print("--force not specified. exiting.")
            bl.finishup(False)
        else: 
            print("--force was specified. continuing.")

# get group's ID
(baseGroup,groupName)=blBase.normalizeArg(option.serverGroup,"--servergroup")
serverGroup = baseGroup+"/"+groupName
print("found server group",serverGroup)
result = bl.runBlcli("ServerGroup","groupNameToId",[serverGroup])
if not result.success:
    print("could not find created group",option.serverGroup)
    print("exiting.")
    success=False
groupid=result.returnValue

# if list of servers specified, add them to the group
if servermap:
    for server in servermap["good"]:
        print("adding",server,"to",option.serverGroup,"with groupid",groupid)
        result = bl.runBlcli("StaticServerGroup","addServerToServerGroupByName",[groupid,server])
        print(result.success)
        if not result.success:
            success=False

bl.finishup(success)
